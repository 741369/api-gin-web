// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-05-02 00:31:44.638566 +0800 CST m=+0.064240206

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "lg1024",
            "url": "http://lg1024.com",
            "email": "1@lg1024.com"
        },
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/sd/cpu": {
            "get": {
                "description": "CPU 使用量 DiskCheck checks the disk usage.",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "summary": "CPU 使用量",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/disk": {
            "get": {
                "description": "服务器硬盘使用量 DiskCheck checks the disk usage.",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "summary": "服务器硬盘使用量",
                "responses": {
                    "200": {
                        "description": "OK - Free space: 16321MB (15GB) / 51200MB (50GB) | Used: 31%",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "429": {
                        "description": "WARNING",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "CRITICAL",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/health": {
            "get": {
                "description": "Shows OK as the ping-pong result",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "sd"
                ],
                "summary": "Shows OK as the ping-pong result",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/os": {
            "get": {
                "description": "Os",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "summary": "OS",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/sd/ram": {
            "get": {
                "description": "内存使用量 RAMCheck checks the disk usage.",
                "consumes": [
                    "text/html"
                ],
                "produces": [
                    "text/html"
                ],
                "summary": "内存使用量",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "HeaderAuthorization": {
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.5",
	Host:        "127.0.0.1:8060",
	BasePath:    "/",
	Schemes:     []string{"http", "https"},
	Title:       "api-gin-web API",
	Description: "后台接口",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
