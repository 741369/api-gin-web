basePath: /
definitions:
  controller.Response:
    properties:
      code:
        type: integer
      data:
        type: object
      message:
        type: string
      trace_id:
        type: object
    type: object
  model.Dept:
    properties:
      children:
        items:
          $ref: '#/definitions/model.Dept'
        type: array
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptId:
        description: 部门编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
    type: object
  model.DictType:
    properties:
      createBy:
        description: 创建者
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      dictId:
        type: integer
      dictName:
        description: 字典名称
        type: string
      dictType:
        description: 字典类型
        type: string
      params:
        type: string
      remark:
        description: 备注
        type: string
      status:
        description: 状态
        type: string
      updateBy:
        description: 更新者
        type: string
      updatedAt:
        type: string
    type: object
  model.Login:
    properties:
      code:
        type: string
      password:
        type: string
      username:
        type: string
      uuid:
        type: string
    required:
    - code
    - password
    - username
    - uuid
    type: object
  model.Menu:
    properties:
      action:
        type: string
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/model.Menu'
        type: array
      component:
        type: string
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      title:
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
      visible:
        type: string
    type: object
  model.SysUser:
    properties:
      avatar:
        description: 头像
        type: string
      createBy:
        type: string
      createdAt:
        type: string
      dataScope:
        type: string
      deletedAt:
        type: string
      deptId:
        description: 部门编码
        type: integer
      email:
        description: 邮箱
        type: string
      nickName:
        description: 昵称
        type: string
      params:
        type: string
      password:
        description: 密码
        type: string
      phone:
        description: 手机号
        type: string
      postId:
        description: 职位编码
        type: integer
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      salt:
        description: 盐
        type: string
      sex:
        description: 性别
        type: string
      status:
        type: string
      updateBy:
        type: string
      updatedAt:
        type: string
      userId:
        description: 编码
        type: integer
      username:
        type: string
    type: object
host: 127.0.0.1:8060
info:
  contact:
    email: 1@lg1024.com
    name: lg1024
    url: http://lg1024.com
  description: 后台接口
  license: {}
  title: api-gin-web API
  version: 1.0.5
paths:
  /api/v1/captcha:
    get:
      consumes:
      - application/json
      description: 获取图片验证码
      responses:
        "200":
          description: '{"data": "图片base64", "id":"图片唯一id" }'
          schema:
            type: string
      summary: 获取图片验证码
      tags:
      - 工具 / system
  /api/v1/dashboard:
    get:
      consumes:
      - application/json
      description: 获取dashboard配置信息
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 获取dashboard配置信息
      tags:
      - 工具 / system
  /api/v1/db/columns/page:
    get:
      description: 数据库表列分页列表 / database table column page list
      parameters:
      - description: table_name / 数据表名称
        in: query
        name: table_name
        required: true
        type: string
      - description: page / 页码
        in: query
        name: page
        type: integer
      - description: page_size / 页条数
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / system
  /api/v1/db/tables/page:
    get:
      description: 数据库表分页列表 / database table page list
      parameters:
      - description: table_name / 数据表名称
        in: query
        name: table_name
        type: string
      - description: page / 页码
        in: query
        name: page
        type: integer
      - description: page_size / 页条数
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / system
  /api/v1/dept:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加部门
      tags:
      - 部门 / dept
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改部门
      tags:
      - 部门 / dept
  /api/v1/dept/{deptId}:
    get:
      description: 获取JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 部门列表数据
      tags:
      - 部门 / dept
  /api/v1/dept/{id}:
    delete:
      description: 删除数据
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除部门
      tags:
      - 部门 / dept
  /api/v1/dept/list:
    get:
      description: 分页列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 分页部门列表数据
      tags:
      - 部门 / dept
  /api/v1/dept/tree:
    get:
      description: 分页列表
      parameters:
      - description: name
        in: query
        name: name
        type: string
      - description: id
        in: query
        name: id
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 分页部门列表数据
      tags:
      - 部门 / dept
  /api/v1/dict/data:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.DictType'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加字典数据
      tags:
      - 字典数据
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.DictType'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/{dictCode}:
    delete:
      description: 删除数据
      parameters:
      - description: dictCode
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除字典数据
      tags:
      - 字典数据
    get:
      description: 获取JSON
      parameters:
      - description: 字典编码
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 通过编码获取字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/list:
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 字典数据列表
      tags:
      - 字典数据
  /api/v1/dict/databyType/{dictType}:
    get:
      description: 获取JSON
      parameters:
      - description: dictType
        in: path
        name: dictType
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 通过字典类型获取字典数据
      tags:
      - 字典数据
  /api/v1/menu:
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
    post:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取JSON
      parameters:
      - description: menuName
        in: formData
        name: menuName
        required: true
        type: string
      - description: Path
        in: formData
        name: Path
        type: string
      - description: Action
        in: formData
        name: Action
        required: true
        type: string
      - description: Permission
        in: formData
        name: Permission
        required: true
        type: string
      - description: ParentId
        in: formData
        name: ParentId
        required: true
        type: string
      - description: IsDel
        in: formData
        name: IsDel
        required: true
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 创建菜单
      tags:
      - 菜单
  /api/v1/menu/{id}:
    delete:
      description: 删除数据
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除菜单
      tags:
      - 菜单
    put:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Menu'
      responses:
        "200":
          description: '{"code": -1, "message": "修改失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改菜单
      tags:
      - 菜单
  /api/v1/menuTreeselect:
    get:
      consumes:
      - application/x-www-form-urlencoded
      description: 获取JSON
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取菜单树
      tags:
      - 菜单
  /api/v1/menuids/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 获取角色对应的菜单id数组
      tags:
      - 菜单
  /api/v1/menulist:
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
  /api/v1/menurole:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "抱歉未找到相关信息"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 根据角色名称获取菜单列表数据（左菜单使用）
      tags:
      - 菜单
  /api/v1/monitor/server:
    get:
      consumes:
      - application/json
      description: 获取服务器基本信息
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 获取服务器基本信息
      tags:
      - 工具 / system
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加表结构
      tags:
      - 工具 / system
    put:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.Dept'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改表结构
      tags:
      - 工具 / system
  /api/v1/sys/tables/info/{tableId}:
    delete:
      description: 删除表结构
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除表结构
      tags:
      - 工具 / system
    get:
      description: 获取JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      security:
      - "": []
      summary: 获取配置
      tags:
      - 工具 / system
  /api/v1/sys/tables/page:
    get:
      description: 生成表分页列表
      parameters:
      - description: table_name / 数据表名称
        in: query
        name: table_name
        type: string
      - description: page / 页码
        in: query
        name: page
        type: integer
      - description: page_size / 页条数
        in: query
        name: page_size
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/controller.Response'
      summary: 分页列表数据
      tags:
      - 工具 / system
  /api/v1/sysuser:
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/model.SysUser'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      summary: 创建用户
      tags:
      - 用户
  /login:
    post:
      consumes:
      - application/json
      description: 获取token
      parameters:
      - description: Add account
        in: body
        name: username
        required: true
        schema:
          $ref: '#/definitions/model.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: 登陆
      tags:
      - login
  /logout:
    post:
      consumes:
      - application/json
      description: 获取token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
      security:
      - "": []
      summary: 退出登录
  /sd/cpu:
    get:
      consumes:
      - text/html
      description: CPU 使用量 DiskCheck checks the disk usage.
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: CPU 使用量
  /sd/disk:
    get:
      consumes:
      - text/html
      description: 服务器硬盘使用量 DiskCheck checks the disk usage.
      produces:
      - text/html
      responses:
        "200":
          description: 'OK - Free space: 16321MB (15GB) / 51200MB (50GB) | Used: 31%'
          schema:
            type: string
        "429":
          description: WARNING
          schema:
            type: string
        "500":
          description: CRITICAL
          schema:
            type: string
      summary: 服务器硬盘使用量
  /sd/health:
    get:
      consumes:
      - application/json
      description: Shows OK as the ping-pong result
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: Shows OK as the ping-pong result
      tags:
      - sd
  /sd/os:
    get:
      consumes:
      - text/html
      description: Os
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: OS
  /sd/ram:
    get:
      consumes:
      - text/html
      description: 内存使用量 RAMCheck checks the disk usage.
      produces:
      - text/html
      responses:
        "200":
          description: OK
          schema:
            type: string
      summary: 内存使用量
schemes:
- http
- https
securityDefinitions:
  HeaderAuthorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
